{{ Twig.set("buildUrlWithVariationId", "not item.data.variation.isMain and (not ceresConfig.item.showPleaseSelect or webstoreConfig.attributeSelectDefaultOption == 0)") }}
{{ Twig.set("itemURL", "item.data | itemURL(buildUrlWithVariationId)") }}
{{ Twig.set("image", "item.data.images.all[0]") }}
{{ Twig.if("item.data.images.variation[0] is not empty") }}
    {{ Twig.set("image", "item.data.images.variation[0]") }}
{{ Twig.endif() }}
{{ Twig.set("imageURL", "image.urlPreview") }}
{{ Twig.set("hasChildren", "'false'") }}
{{ Twig.if("item.data.item.salableVariationCount > 1 and not showAllVariationsOfItemId") }}
    {{ Twig.set("hasChildren", "'true'") }}
{{ Twig.endif() }}
{{ Twig.import("LayoutContainer", "Ceres::PageDesign.Macros.LayoutContainer") }}

<article class="cmp cmp-product-thumb">
    <div :class="paddingClasses" :style="paddingInlineStyles">

        <add-to-basket
                data-testing="item-add-to-basket"
                :variation-id="item.variation.id"
                :is-salable="!!item.filter && item.filter.isSalable"
                :has-children="!!item.item && item.item.salableVariationCount > 1"
                :interval-quantity="item.variation.intervalOrderQuantity || 1"
                :minimum-quantity="item.variation.minimumOrderQuantity"
                :maximum-quantity="!!item.variation.maximumOrderQuantity && item.variation.maximumOrderQuantity > 0 ? item.variation.maximumOrderQuantity : null"
                :order-properties="item.properties.filter(function(prop) { return prop.property.isOderProperty })"
                :has-order-properties="item.hasOrderProperties"
                :has-required-order-property="item.hasRequiredOrderProperty"
                :use-large-scale="true"
                :show-quantity="false"
                :item-url="item | itemURL(urlWithVariationId)"
                :has-price="item | hasItemDefaultPrice"
                :item-type="item.item.itemType">
        </add-to-basket>

        <div class="thumb-image">
            <div class="prop-1-1">
                <slot name="item-image">
                    <category-image-carousel :image-urls-data="item.images | itemImages(imageUrlAccessor)"
                                             :alt="item | itemName"
                                             :title="item | itemName"
                                             :item-url="item | itemURL(urlWithVariationId)"
                                             :enable-carousel="$ceres.config.item.enableImageCarousel"
                                             :disable-carousel-on-mobile="disableCarouselOnMobile"
                                             ref="categoryImageCarousel">
                    </category-image-carousel>
                </slot>
            </div>
        </div>

        <!-- STORE SPECIALS -->
        <slot name="store-special">
            <item-store-special v-if="storeSpecial || item.variation.bundleType === 'bundle' || item.item.itemType === 'set'"
                                :store-special="storeSpecial"
                                :recommended-retail-price="item.prices.rrp"
                                :variation-retail-price="item.prices.default"
                                :special-offer-price="item.prices.specialOffer"
                                :decimal-count="decimalCount"
                                :bundle-type="item.variation.bundleType"
                                :item-type="item.item.itemType">
            </item-store-special>
        </slot>
        <!-- ./STORE SPECIALS -->

        <!-- ITEM DETAILS -->
        <slot name="item-details">
            <div class="thumb-content">
                <a :href="item | itemURL(urlWithVariationId)" class="thumb-title small" :class="{ 'stretched-link': $ceres.config.global.shippingCostsCategoryId == 0 }">${ item | itemName }</a>

                <div class="item-details__book-details">

                    {{ Twig.if("item.data.texts.name3 is not empty") }}
                    <span class="item-details__subtitle">
                        {{ Twig-print(item.data.texts.name3) }}
                    </span>
                    {{ Twig.endif() }}
                    {{ Twig.if("item.data.texts.name2 is not empty") }}
                    <span class="item-details__author">
                        {{ Twig-print(item.data.texts.name2) }}
                    </span>
                    {{ Twig.endif() }}
                    <span v-if="item.texts.shortDescription" class="item-details__short">
                        ${ item.texts.shortDescription }
                    </span>

                    <span v-if="item.variation.availability" :class="'availability badge availability_' + item.variation.availability.id">
                        <span>
                            ${ item.variation.availability.names.name }
                        </span>
                    </span>

                    <div class="availabilityList w-100" >
                        {{ Twig.if("item.data.variation.isMain and item.data.variation.availability") }}
                        <span class="availability text-center d-block tag availability-{{ Twig.print("item.data.variation.availability.id") }}">
                              {{ Twig.print("item.data.variation.availability.names.name") }}
                            </span>
                        {{ Twig.else() }}
                        <span class="availability tag text-center d-block variation-select">
                              Mehrere Varianten
                            </span>
                        {{ Twig.endif() }}
                    </div>
                </div>

                <div class="thumb-meta mt-2">
                    <slot name="before-prices"></slot>

                    <div class="prices">
                        <div v-if="item.prices.rrp && item.prices.rrp.price.value > 0 && item.prices.rrp.price.value > item.prices.default.unitPrice.value" class="price-view-port">
                            <del class="crossprice" v-if="item.prices.specialOffer">
                                ${ item.prices.default.unitPrice.formatted | itemCrossPrice(true) }
                            </del>
                            <del class="crossprice newcross" v-else>
                                ${ item.prices.rrp.unitPrice.formatted | itemCrossPrice }
                            </del>
                        </div>

                        <div class="price">
                            <template v-if="item.item.itemType === 'set'">
                                ${ $translate("Ceres::Template.itemSetPrice", { price: itemSetPrice }) } *
                            </template>
                            <template v-else-if="!!item.item && item.item.salableVariationCount > 1 && $ceres.isCheapestSorting" >
                                ${ $translate("Ceres::Template.categoryItemFromPrice", { price: itemPrice }) } *
                            </template>
                            <template v-else>
                                ${ item.prices.default.unitPrice.formatted | specialOffer(item.prices, "unitPrice", "formatted") } *
                            </template>
                        </div>
                    </div>
                </div>

                <slot name="after-prices"></slot>

                <div class="category-unit-price small" v-if="!(item.unit.unitOfMeasurement === 'C62' && item.unit.content === 1)">
                    <span>${ item.unit.content }</span>
                    <span>&nbsp;${ item.unit.names.name }</span>
                    <span v-if="item.variation.mayShowUnitPrice">&nbsp;| ${ item.prices.default.basePrice }</span>
                </div>

                <div class="vat small text-muted">
                    * <span v-if="showNetPrices">${ $translate("Ceres::Template.itemExclVAT") }</span>
                    <span v-else>${ $translate("Ceres::Template.itemInclVAT") }</span>
                    ${ $translate("Ceres::Template.itemExclusive") }
                    <a v-if="$ceres.config.global.shippingCostsCategoryId > 0" data-toggle="modal" href="#shippingscosts" class="text-appearance" :title="$translate('Ceres::Template.itemShippingCosts')">${ $translate("Ceres::Template.itemShippingCosts") }</a>
                    <a v-else :title="$translate('Ceres::Template.itemShippingCosts')">${ $translate("Ceres::Template.itemShippingCosts") }</a>
                </div>
            </div>
        </slot>
        <!-- ./ITEM DETAILS  -->
    </div>
    <add-to-basket
            :variation-id="item.variation.id"
            :is-salable="!!item.filter && item.filter.isSalable"
            :has-children="!!item.item && item.item.salableVariationCount > 1"
            :interval-quantity="item.variation.intervalOrderQuantity || 1"
            :minimum-quantity="item.variation.minimumOrderQuantity"
            :maximum-quantity="!!item.variation.maximumOrderQuantity && item.variation.maximumOrderQuantity > 0 ? item.variation.maximumOrderQuantity : null"
            :order-properties="item.properties.filter(function(prop) { return prop.property.isOderProperty })"
            :has-order-properties="item.hasOrderProperties"
            :has-required-order-property="item.hasRequiredOrderProperty"
            :use-large-scale="false"
            :show-quantity="false"
            :item-url="item | itemURL(urlWithVariationId)"
            :has-price="item | hasItemDefaultPrice"
            :item-type="item.item.itemType">
    </add-to-basket>
</article>