{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}
{% import "Ceres::Widgets.Helper.WidgetHelper" as WidgetHelper %}

{{ Twig.import("LayoutContainer", "Ceres::PageDesign.Macros.LayoutContainer") }}

{% set customClass = widget.settings.customClass.mobile %}
{% set spacingSettings = widget.settings.spacing %}
{% set inlinePadding   = WidgetHelper.getInlineSpacings(spacingSettings, spacingSettings.customPadding.mobile, "") %}
{% set inlineMargin    = WidgetHelper.getInlineSpacings(spacingSettings, "", spacingSettings.customMargin.mobile) %}
{% set spacingPadding  = WidgetHelper.getSpacingClasses(spacingSettings, spacingSettings.customPadding.mobile, "") %}
{% set spacingMargin   = WidgetHelper.getSpacingClasses(spacingSettings, "", spacingSettings.customMargin.mobile) %}

{% set numberOfColumnsDesktop   = widget.settings.numberOfColumnsDesktop.mobile | default(4) %}
{% set numberOfColumnsTablet    = widget.settings.numberOfColumnsTablet.mobile | default(3) %}
{% set numberOfColumnsMobile    = widget.settings.numberOfColumnsMobile.mobile | default(1) %}

{% set appearance      = widget.settings.appearance.mobile | default("primary") %}

{% set noVat = widget.settings.noVat.mobile is same as (true) %}
{% set grayBackground = widget.settings.grayBackground.mobile is same as (true) %}
{% set outline = widget.settings.outline.mobile is same as (true) %}

{{ Twig.set("buildUrlWithVariationId", "not ceresConfig.item.showPleaseSelect or webstoreConfig.attributeSelectDefaultOption == 0") }}

<div class="widget widget-item-grid widget-{{ appearance }}{% if customClass | length > 0 %} {{ customClass }}{% endif %}{% if spacingMargin | length > 0 %} {{ spacingMargin }}{% endif %}{% if noVat %} item-vat-hidden{% endif %}{% if grayBackground %} item-bg-gray{% endif %}{% if outline %} btn-outline{% endif %}" {% if inlineMargin | length > 0 %} style="{{ inlineMargin }}"{% endif %}>
    {{ Twig.if( "itemList is not empty" ) }}
    <ul class="widget-inner row product-list grid mx-n2">
        {{ Twig.set("loadDirectly", "true") }}
        {{ Twig.for("item", "itemList") }}
            {{ Twig.set("itemURL", "item.data | itemURL(buildUrlWithVariationId)") }}
            <li class="px-2 col-{{ 12 / numberOfColumnsMobile }} col-md-{{ 12 / numberOfColumnsTablet }} col-lg-{{ 12 / numberOfColumnsDesktop }}{% if spacingPadding | length > 0 %} {{ spacingPadding }}{% endif %}"{% if inlinePadding | length > 0 %} style="{{ inlinePadding }}"{% endif %}>
                {{ Twig.if("loop.index > 2") }}
                    {{ Twig.set("loadDirectly", "false") }}
                {{ Twig.endif() }}
                {{ include("Waldorfshop7::ItemList.Components.CategoryItem") }}
            </li>
        {{ Twig.endfor() }}
    </ul>
    {{ Twig.endif() }}
</div>
