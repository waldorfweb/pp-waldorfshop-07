{"version":3,"sources":["webpack:///./resources/js/src/app/mixins/buttonSizeProperty.mixin.js","webpack:///./resources/js/src/app/components/item/QuantityInput.vue","webpack:///resources/js/src/app/components/item/QuantityInput.vue","webpack:///./resources/js/src/app/components/item/QuantityInput.vue?f4be","webpack:///./resources/js/src/app/components/item/QuantityInput.vue?8dc2","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue","webpack:///resources/js/src/app/components/basket/AddToBasket.vue","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue?6a66","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue?72a9"],"names":["BUTTON_SIZES","LEGACY_CLASS_MAP","ButtonSizePropertyMixin","props","buttonSize","type","String","default","validator","value","Object","keys","indexOf","computed","buttonSizeClass","hasOwnProperty","this","render","_vm","_c","_self","staticClass","ref","attrs","disabled","waiting","$translate","domProps","displayValue","on","change","$event","setValue","target","_v","directives","name","rawName","isMaximum","compMax","expression","class","useAppearance","title","maximumHint","click","increaseValue","isMinimum","minimumHint","decreaseValue","_withStripped","required","timeout","min","max","interval","variationId","data","compValue","compMin","compInterval","compDecimals","onValueChanged","created","variationBasketQuantity","itemSetVariationId","mapState","basketItems","watch","handler","deep","methods","diff","fetchQuantityFromBasket","component","showQuantity","useLargeScale","canBeAddedToBasket","isLoading","addToBasket","icon","loading","_e","directToItem","$ceres","isItemView","quantity","minimumQuantity","maximumQuantity","intervalQuantity","isSalable","allVariationsSelected","updateQuantity","handleButtonState","buttonLockState","buttonClasses","style","paddingInlineStyles","_f","_s","hasPrice","tooltipText","isWishList","role","extractPropertiesAndSurcharge","orderProperties","property","totalSurcharge","orderParams","propertyId","mixins","components","QuantityInput","itemUrl","hasChildren","hasOrderProperties","hasRequiredOrderProperty","paddingClasses","propQuantity","itemType","inject","itemId","isSet","requiresProperties","classes","variationOrderQuantity","variationMissingProperties","hasAvailableVariations","isBasketLoading","basketItemOrderParams","totalOrderParamsMarkup","setComponent","setComponents","basketObject","document","detail","NotificationService","error","showMissingPropertiesError","errorMsgContent","navigateTo"],"mappings":"88BAAA,IAAMA,EAAe,CAAC,SAAU,UAE1BC,EAAmB,CACrB,GAAM,SACN,GAAM,GACN,GAAM,UAGGC,EACb,CACIC,MAAO,CACHC,WACA,CACIC,KAAM,CAACC,OAAQ,MACfC,QAAS,KACTC,UAAW,SAAAC,GAEP,OAIsB,IAJf,CACH,IAAE,OACCT,EAAY,EACZU,OAAOC,KAAKV,KACjBW,QAAQH,MAKtBI,SAAU,CACNC,gBAAe,WAEX,OAAIb,EAAiBc,eAAeC,KAAKZ,YAE9BH,EAAiBe,KAAKZ,YAG1BY,KAAKZ,e,wCClCxB,IAAIa,EAAS,WACX,IAAIC,EAAMF,KACRG,EAAKD,EAAIE,MAAMD,GACjB,OAAOA,EAAG,MAAO,CAAEE,YAAa,wBAA0B,CACxDF,EAAG,QAAS,CACVG,IAAK,qBACLD,YAAa,wBACbE,MAAO,CACLlB,KAAM,OACNmB,SAAUN,EAAIO,QACd,aAAcP,EAAIQ,WAAW,sCAE/BC,SAAU,CAAElB,MAAOS,EAAIU,cACvBC,GAAI,CACFC,OAAQ,SAAUC,GAChB,OAAOb,EAAIc,SAASD,EAAOE,OAAOxB,WAIxCS,EAAIgB,GAAG,KACPf,EAAG,MAAO,CAAEE,YAAa,wCAA0C,CACjEF,EACE,SACA,CACEgB,WAAY,CACV,CACEC,KAAM,UACNC,QAAS,YACT5B,MAAOS,EAAIoB,WAA6B,IAAhBpB,EAAIqB,QAC5BC,WAAY,+BAGhBnB,YACE,0DACFoB,MAAO,CACLjB,SAAUN,EAAIoB,WAAapB,EAAIO,QAC/B,iBAAkBP,EAAIwB,eAExBnB,MAAO,CACL,cAAe,UACf,iBAAkB,MAClB,eAAgB,wBAChBoB,MAAOzB,EAAI0B,YACX,aAAc1B,EAAIQ,WAChB,8CAGJG,GAAI,CACFgB,MAAO,SAAUd,GACf,OAAOb,EAAI4B,mBAIjB,CACE3B,EAAG,IAAK,CACNE,YAAa,2BACbE,MAAO,CAAE,cAAe,YAI9BL,EAAIgB,GAAG,KACPf,EACE,SACA,CACEgB,WAAY,CACV,CACEC,KAAM,UACNC,QAAS,YACT5B,MAAOS,EAAI6B,WAA6B,IAAhB7B,EAAIqB,QAC5BC,WAAY,+BAGhBnB,YACE,0DACFoB,MAAO,CACLjB,SAAUN,EAAI6B,WAAa7B,EAAIO,QAC/B,iBAAkBP,EAAIwB,eAExBnB,MAAO,CACL,cAAe,UACf,iBAAkB,SAClB,eAAgB,wBAChBoB,MAAOzB,EAAI8B,YACX,aAAc9B,EAAIQ,WAChB,8CAGJG,GAAI,CACFgB,MAAO,SAAUd,GACf,OAAOb,EAAI+B,mBAIjB,CACE9B,EAAG,IAAK,CACNE,YAAa,4BACbE,MAAO,CAAE,cAAe,iBAQpCN,EAAOiC,eAAgB,E,2cC5DR,IC5CsM,ED4CtM,CACfd,sBAEAjC,OACAM,OACAJ,YACA8C,aAEAC,SACA/C,YACA8C,YACA5C,aAEA8C,KACAhD,YACA8C,YACA5C,WAEA+C,KACAjD,YACA8C,aAEAI,UACAlD,YACA8C,YACA5C,WAEAkB,SACApB,aACA8C,aAEAK,aACAnD,YACA8C,aAEAT,uBAGAe,gBAEA,OACAC,qBACAC,iBACApB,iBACAqB,2BACAC,eACAC,sBAIAC,mBACA,WACA,mDACA,4DAEA,4BACA,iCAEA,gCAEA,4CAEA,yCACA,+BAEA,+BAEA,gCAIAlD,S,+VAAAA,EAEAmD,mCACA,WACA,iCAEA,SAGA,0EACA,CACA,+FAEA,sBAGA,UAGAjB,qBAEA,iFAGAT,qBAEA,iFAGAU,uBAEA,uBACA,wCACA,CACAK,wDAKAT,uBAEA,uBACA,wCACA,CACAU,oDAKA1B,wBAEA,2DAGAqC,8BAEA,2CAEA,uGAGA,IAGAC,aACAC,wBAAA,0BAIAC,MACA,CACAZ,wBAEA,gBAEA,gCAIAW,YACA,CACAE,sBAEA,+BAEA,gCAGAC,SAGAjB,gBAEA,eACA,gCAGAC,gBAEA,eACA,gCAGA7C,oBAEA,OAEA,kBAIA8C,qBAEA,qCAIAgB,QACA,CACAzB,yBAEA,uEAEA,4DAEA,kBAIAG,yBAEA,uEAEA,4DAEA,kBAIAjB,qBAkBA,MAfA,qBAEAvB,4CAGAA,gBACA,WAEAA,+BAIAA,4CAMA+D,EAFA,+CAEAA,iEAIAA,uDAGA,2BAEA,sBAEA/D,KAIAA,uBAEAA,6CAIAA,sCAEA,gBAEA,iBACA,uBAEA,6CAEA,wDAIAgE,oCAEA,gGAGA,+BAEA,mCAGA,uBAGA,sBAkBA,+BAfA,mDAEA,yDAEA,eACA,eACA,+BAIA,+BAQA,+B,OEhVIC,EAAY,YACd,EACAzD,EH8FoB,IG5FpB,EACA,KACA,KACA,MAIa,UAAAyD,E,iDClBf,IAAIzD,EAAS,WACX,IAAIC,EAAMF,KACRG,EAAKD,EAAIE,MAAMD,GACjB,OAAOA,EAAG,MAAO,EACdD,EAAIyD,cAAgBzD,EAAI0D,eAAiB1D,EAAI2D,mBAC1C1D,EACE,MACA,CACEgB,WAAY,CAAC,CAAEC,KAAM,UAAWC,QAAS,cACzChB,YAAa,+CACboB,MAAO,CAAE,oBAAqBvB,EAAI4D,WAClCvD,MAAO,CACL,cAAe,UACf,iBAAkB,MAClBoB,MAAOzB,EAAIQ,WAAW,0CAExBG,GAAI,CACFgB,MAAO,SAAUd,GACf,OAAOb,EAAI6D,iBAIjB,CACE5D,EAAG,OAAQ,CACTE,YAAa,0BACbE,MAAO,CAAEyD,KAAM,YAAaC,QAAS/D,EAAI4D,cAG7C,GAEF5D,EAAIgE,KACRhE,EAAIgB,GAAG,KACNhB,EAAIyD,eAAgBzD,EAAI0D,eAAkB1D,EAAI2D,mBAuB3C3D,EAAIgE,KAtBJ/D,EACE,MACA,CACEgB,WAAY,CAAC,CAAEC,KAAM,UAAWC,QAAS,cACzChB,YAAa,+CACbE,MAAO,CACL,cAAe,UACf,iBAAkB,MAClBoB,MAAOzB,EAAIQ,WAAW,iCAExBG,GAAI,CACFgB,MAAO,SAAUd,GACf,OAAOb,EAAIiE,kBAIjB,CACEhE,EAAG,IAAK,CACNE,YAAa,gDAKvBH,EAAIgB,GAAG,KACPhB,EAAIyD,eAAiBzD,EAAI0D,cACrBzD,EACE,MACA,CACEE,YAAa,WACboB,MAAO,CAAE,aAAcvB,EAAIkE,OAAOC,aAEpC,CACElE,EAAG,MAAO,CAAEE,YAAa,2BAA6B,CACpDF,EACE,MACA,CAAEE,YAAa,4BACf,CACEF,EAAG,iBAAkB,CACnBI,MAAO,CACLd,MAAOS,EAAIoE,SACXlC,QAAS,EACTC,IAAKnC,EAAIqE,gBACTjC,IAAKpC,EAAIsE,gBACTjC,SAAUrC,EAAIuE,iBACd,eAAgBvE,EAAIsC,YACpB/B,QACEP,EAAI4D,YACH5D,EAAIwE,YACJxE,EAAIyE,uBAET9D,GAAI,CACF,kBAAmBX,EAAI0E,eACvB,eAAgB1E,EAAI2E,sBAI1B,GAEF3E,EAAIgB,GAAG,KACNhB,EAAIyE,uBAA0BzE,EAAIwE,UA+B9BxE,EAAI4E,gBAiCL3E,EACE,SACA,CACEgB,WAAY,CAAC,CAAEC,KAAM,UAAWC,QAAS,cACzChB,YACE,oDACFoB,MAAOvB,EAAI6E,cACXC,MAAO9E,EAAI+E,oBACX1E,MAAO,CACL,cAAe,UACf,iBAAkB,MAClBoB,MAAOzB,EAAIgF,GAAG,YAAPhF,CACL,wCACA,CAAEoC,IAAKpC,EAAIsE,oBAIjB,CACErE,EAAG,OAAQ,CACTI,MAAO,CACLyD,KAAM,gBACNvD,QAASP,EAAI4D,aAGjB5D,EAAIgB,GACF,qBACEhB,EAAIiF,GACFjF,EAAIQ,WACF,0CAGJ,mBAGN,GAlEFP,EACE,SACA,CACEE,YAAa,2CACboB,MAAOvB,EAAI6E,cACXC,MAAO9E,EAAI+E,oBACX1E,MAAO,CAAEC,SAAUN,EAAI4D,YAAc5D,EAAIkF,UACzCvE,GAAI,CACFgB,MAAO,SAAUd,GACf,OAAOb,EAAI6D,iBAIjB,CACE5D,EAAG,OAAQ,CACTI,MAAO,CACLyD,KAAM,gBACNC,QAAS/D,EAAI4D,aAGjB5D,EAAIgB,GACF,qBACEhB,EAAIiF,GACFjF,EAAIQ,WACF,0CAGJ,mBAGN,GA7DFP,EACE,SACA,CACEgB,WAAY,CAAC,CAAEC,KAAM,UAAWC,QAAS,cACzChB,YACE,oDACFoB,MAAOvB,EAAI6E,cACXC,MAAO9E,EAAI+E,oBACX1E,MAAO,CACL,cAAe,UACf,iBAAkB,MAClBoB,MAAOzB,EAAImF,cAGf,CACElF,EAAG,IAAK,CACNE,YAAa,sBACbE,MAAO,CAAE,cAAe,UAE1BL,EAAIgB,GACF,qBACEhB,EAAIiF,GACFjF,EAAIQ,WACF,0CAGJ,wBA4ElBR,EAAIgE,KACRhE,EAAIgB,GAAG,KACNhB,EAAIyD,cAAiBzD,EAAI0D,cA6EtB1D,EAAIgE,KA5EJ/D,EACE,MACA,CAAEE,YAAa,WAAYoB,MAAO,CAAE,aAAcvB,EAAIoF,aACtD,CACEnF,EACE,MACA,CACEE,YAAa,YACbE,MAAO,CAAEgF,KAAM,QAAS,aAAc,kBAExC,CACErF,EAAI2D,mBACA1D,EACE,SACA,CACEE,YACE,qDACFoB,MAAO,CAAE,oBAAqBvB,EAAI4D,WAClCvD,MAAO,CAAElB,KAAM,UACfwB,GAAI,CACFgB,MAAO,SAAUd,GACf,OAAOb,EAAI6D,iBAIjB,CACE5D,EAAG,OAAQ,CACTE,YAAa,0BACbE,MAAO,CACLyD,KAAM,gBACNC,QAAS/D,EAAI4D,aAGjB5D,EAAIgB,GACF,qBACEhB,EAAIiF,GACFjF,EAAIQ,WACF,0CAGJ,mBAGN,GAEFP,EACE,SACA,CACEE,YACE,qDACFE,MAAO,CAAElB,KAAM,UACfwB,GAAI,CACFgB,MAAO,SAAUd,GACf,OAAOb,EAAIiE,kBAIjB,CACEhE,EAAG,IAAK,CACNE,YACE,4CACFE,MAAO,CAAE,cAAe,UAE1BL,EAAIgB,GACF,qBACEhB,EAAIiF,GACFjF,EAAIQ,WAAW,iCAEjB,2BAY5BT,EAAOiC,eAAgB,E,iiDChMvB,YAkWA,SAASsD,EAA8BC,GAEvC,QACA,KA0BA,OAxBAA,uBAEA,kCACA,CACA,iBAEA,uBACA,sBACAC,2CAEAA,4CAGAC,qCAEAC,QACAC,gBACAxG,iBACA+B,kBACA3B,oBAKA,CACAmG,cACAD,kBCvdmN,MDwFpM,CACfvE,qBAEA0E,aAEAC,WACA,CACAC,yBAGA7G,MACA,CACA8G,eACAtC,aACA,CACAtE,aACAE,YAEAqE,cACA,CACAvE,aACAE,YAEAiD,YACA,CACAnD,aAEAqF,UACA,CACArF,aACAE,YAEA2G,YACA,CACA7G,aACAE,YAEAkF,iBACA,CACApF,YACAE,WAEAgF,gBACA,CACAlF,YACAE,WAEAiF,gBACA,CACAnF,YACAE,cAEAkG,gBACA,CACApG,WACAE,mBAAA,WAEA4G,mBACA,CACA9G,aACAE,YAEA6G,yBACA,CACA/G,aACAE,YAEA6F,SACA,CACA/F,aACAE,YAEA8G,eACA,CACAhH,YACAE,cAEA0F,oBACA,CACA5F,YACAE,cAEA+F,WACA,CACAjG,aACAE,YAEA+G,aACA,CACAjH,YACAE,cAEAgH,SACA,CACAlH,YACAE,eAIAiH,QACAC,QACAlH,eAIAM,S,+VAAAA,EAEA6G,iBAEA,OACA,sCACA,gDACA,wFACA,uBAGA7C,8BAEA,wBACA,oBACA,qDACA,yBACA,gBACA,YAGA8C,8BAEA,gDACA,oHACA,+BAGA5B,yBAEA,SAYA,OAVA,mCAEA6B,6BAGA,kCAEAA,uCAGA,GAGAvB,uBAEA,mCAEA,wEAIA,uEAIAwB,kCAEA,0GAGAC,sCAEA,kFAGAC,kCAEA,6CACA,sDACA,yGAGApC,iCAEA,kBAEA,iDAMA,sCACA,sDACA,0EAIAb,qBAEA,+GAGAZ,aACAC,wBAAA,uBACA6D,4BAAA,oCAIAvE,gBAEA,OACA6B,WACAQ,qBAIAvB,QACA,CAIAQ,uBACA,WAIA,GAHA,mEACA,4DAEA,4EAEA,uCAEA,8BACA,CACA,+DAEA,8BAEA,EACA,CACAvB,6BACA8B,uBACA2C,oCACAC,yCAGA,cACA,CACA,SACA,6DAEA,6DAEA,oBAGA,IACAC,iCAAA,qCAGAC,QACA5E,cACA8B,wDACA2C,oCACAC,6CAGAG,kBAGA,8CACA,YAEAC,+DAAAC,YACA,gDAEA,YAEA,6CAEA,QAEAC,QACA,aACA,4DACAC,qBAEA,qBAKAC,sCAEA,8EAEA,IAGA,EAFA,SADA,kFAGA,+BACA,CACAC,GAFAvG,QAEAuG,QACA,8BAEAH,6GAGArD,wBAEAyD,2BAGA/C,8BAEA,wBAOAD,2BAEA,kBAIAxB,MACA,CACAkB,qBAEA,2BAEA,0EACA,iJAIAuC,mCAEA,oBAEA,kBAIAP,yBAEA,WAEA,oB,OE3aI5C,EAAY,YACd,EACAzD,EH4QoB,IG1QpB,EACA,KACA,KACA,MAIa,UAAAyD,E","file":"chunks/ceres-client-0.min.js","sourcesContent":["const BUTTON_SIZES = [\"btn-sm\", \"btn-lg\"];\n\nconst LEGACY_CLASS_MAP = {\n    \"sm\": \"btn-sm\",\n    \"md\": \"\",\n    \"lg\": \"btn-lg\"\n};\n\nexport const ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    \"\",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"qty-box d-flex h-100\" }, [\n    _c(\"input\", {\n      ref: \"quantityInputField\",\n      staticClass: \"qty-input text-center\",\n      attrs: {\n        type: \"text\",\n        disabled: _vm.waiting,\n        \"aria-label\": _vm.$translate(\"Ceres::Template.itemQuantityInput\"),\n      },\n      domProps: { value: _vm.displayValue },\n      on: {\n        change: function ($event) {\n          return _vm.setValue($event.target.value)\n        },\n      },\n    }),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"qty-btn-container d-flex flex-column\" }, [\n      _c(\n        \"button\",\n        {\n          directives: [\n            {\n              name: \"tooltip\",\n              rawName: \"v-tooltip\",\n              value: _vm.isMaximum && _vm.compMax !== 0,\n              expression: \"isMaximum && compMax !== 0\",\n            },\n          ],\n          staticClass:\n            \"btn qty-btn flex-fill d-flex justify-content-center p-0\",\n          class: {\n            disabled: _vm.isMaximum || _vm.waiting,\n            \"btn-appearance\": _vm.useAppearance,\n          },\n          attrs: {\n            \"data-toggle\": \"tooltip\",\n            \"data-placement\": \"top\",\n            \"data-testing\": \"quantity-btn-increase\",\n            title: _vm.maximumHint,\n            \"aria-label\": _vm.$translate(\n              \"Ceres::Template.itemQuantityInputIncrease\"\n            ),\n          },\n          on: {\n            click: function ($event) {\n              return _vm.increaseValue()\n            },\n          },\n        },\n        [\n          _c(\"i\", {\n            staticClass: \"fa fa-plus default-float\",\n            attrs: { \"aria-hidden\": \"true\" },\n          }),\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          directives: [\n            {\n              name: \"tooltip\",\n              rawName: \"v-tooltip\",\n              value: _vm.isMinimum && _vm.compMax !== 0,\n              expression: \"isMinimum && compMax !== 0\",\n            },\n          ],\n          staticClass:\n            \"btn qty-btn flex-fill d-flex justify-content-center p-0\",\n          class: {\n            disabled: _vm.isMinimum || _vm.waiting,\n            \"btn-appearance\": _vm.useAppearance,\n          },\n          attrs: {\n            \"data-toggle\": \"tooltip\",\n            \"data-placement\": \"bottom\",\n            \"data-testing\": \"quantity-btn-decrease\",\n            title: _vm.minimumHint,\n            \"aria-label\": _vm.$translate(\n              \"Ceres::Template.itemQuantityInputDecrease\"\n            ),\n          },\n          on: {\n            click: function ($event) {\n              return _vm.decreaseValue()\n            },\n          },\n        },\n        [\n          _c(\"i\", {\n            staticClass: \"fa fa-minus default-float\",\n            attrs: { \"aria-hidden\": \"true\" },\n          }),\n        ]\n      ),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"qty-box d-flex h-100\">\n        <input class=\"qty-input text-center\"\n               type=\"text\"\n               :value=\"displayValue\"\n               @change=\"setValue($event.target.value)\"\n               :disabled=\"waiting\"\n               ref=\"quantityInputField\"\n               :aria-label=\"$translate('Ceres::Template.itemQuantityInput')\">\n\n        <div class=\"qty-btn-container d-flex flex-column\">\n            <button class=\"btn qty-btn flex-fill d-flex justify-content-center p-0\"\n                 @click=\"increaseValue()\"\n                 :class=\"{ 'disabled': isMaximum || waiting, 'btn-appearance': useAppearance }\"\n                 v-tooltip=\"isMaximum && compMax !== 0\"\n                 data-toggle=\"tooltip\"\n                 data-placement=\"top\"\n                 data-testing=\"quantity-btn-increase\"\n                 :title=\"maximumHint\"\n                 :aria-label=\"$translate('Ceres::Template.itemQuantityInputIncrease')\">\n                <i class=\"fa fa-plus default-float\" aria-hidden=\"true\"></i>\n            </button>\n\n            <button class=\"btn qty-btn flex-fill d-flex justify-content-center p-0\"\n                 @click=\"decreaseValue()\"\n                 :class=\"{ 'disabled': isMinimum || waiting, 'btn-appearance': useAppearance }\"\n                 v-tooltip=\"isMinimum && compMax !== 0\"\n                 data-toggle=\"tooltip\"\n                 data-placement=\"bottom\"\n                 data-testing=\"quantity-btn-decrease\"\n                 :title=\"minimumHint\"\n                 :aria-label=\"$translate('Ceres::Template.itemQuantityInputDecrease')\">\n                <i class=\"fa fa-minus default-float\" aria-hidden=\"true\"></i>\n            </button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { floatLength, formatFloat, limit } from \"../../helper/number\";\nimport { defaultValue, isDefined, isNullOrUndefined } from \"../../helper/utils\";\nimport { debounce } from \"../../helper/debounce\";\nimport { mapState } from \"vuex\";\n\nexport default {\n    name: \"quantity-input\",\n\n    props: {\n        value: {\n            type: Number,\n            required: true\n        },\n        timeout: {\n            type: Number,\n            required: false,\n            default: 500\n        },\n        min: {\n            type: Number,\n            required: false,\n            default: 0\n        },\n        max: {\n            type: Number,\n            required: false\n        },\n        interval: {\n            type: Number,\n            required: false,\n            default: 1\n        },\n        waiting: {\n            type: Boolean,\n            required: false\n        },\n        variationId: {\n            type: Number,\n            required: false\n        },\n        useAppearance: Boolean\n    },\n\n    data()\n    {\n        return {\n            compValue:      this.value,\n            compMin:        this.min,\n            compMax:        this.max,\n            compInterval:   this.interval,\n            compDecimals:   0,\n            onValueChanged: null\n        };\n    },\n\n    created()\n    {\n        this.compInterval = defaultValue(this.compInterval, 1);\n        this.compInterval = this.compInterval === 0 ? 1 : this.compInterval;\n\n        const minDecimals = floatLength(this.min);\n        const intervalDecimals = floatLength(this.compInterval);\n\n        this.compDecimals = Math.max(minDecimals, intervalDecimals);\n\n        this.onValueChanged = debounce(() =>\n        {\n            this.$emit(\"quantity-change\", this.compValue);\n        }, defaultValue(this.timeout, 500));\n\n        if (!isNullOrUndefined(this.variationId))\n        {\n            this.fetchQuantityFromBasket();\n        }\n    },\n\n    computed:\n    {\n        variationBasketQuantity()\n        {\n            if (isNullOrUndefined(this.variationId))\n            {\n                return 0;\n            }\n\n            if(this.itemSetVariationId <= 0 || this.variationId === this.itemSetVariationId)\n            {\n                const basketObject = this.$store.state.basket.items.find(variations => variations.variationId === this.variationId);\n\n                return basketObject ? basketObject.quantity : 0;\n            }\n\n            return 0;\n        },\n\n        isMinimum()\n        {\n            return isDefined(this.compMin) && (this.compValue - this.compInterval) < this.compMin;\n        },\n\n        isMaximum()\n        {\n            return isDefined(this.compMax) && (this.compValue + this.compInterval) > this.compMax;\n        },\n\n        minimumHint()\n        {\n            return this.$translate(\n                \"Ceres::Template.singleItemQuantityMin\",\n                {\n                    min: this.$options.filters.numberFormat(this.compMin)\n                }\n            );\n        },\n\n        maximumHint()\n        {\n            return this.$translate(\n                \"Ceres::Template.singleItemQuantityMax\",\n                {\n                    max: this.$options.filters.numberFormat(this.max)\n                }\n            );\n        },\n\n        displayValue()\n        {\n            return this.$options.filters.numberFormat(this.compValue);\n        },\n\n        itemSetVariationId()\n        {\n            if (this.$store.state.items.itemSetId > 0)\n            {\n                return this.$store.getters[`${this.$store.state.items.itemSetId}/currentItemVariation`].variation.id;\n            }\n\n            return 0;\n        },\n\n        ...mapState({\n            basketItems: state => state.basket.items\n        })\n    },\n\n    watch:\n    {\n        variationId(newValue)\n        {\n            if (isDefined(newValue))\n            {\n                this.fetchQuantityFromBasket();\n            }\n        },\n\n        basketItems:\n        {\n            handler(newValue, oldValue)\n            {\n                if (isDefined(this.variationId))\n                {\n                    this.fetchQuantityFromBasket();\n                }\n            },\n            deep: true\n        },\n\n        min(newValue)\n        {\n            this.compMin = newValue;\n            this.fetchQuantityFromBasket();\n        },\n\n        max(newValue)\n        {\n            this.compMax = newValue;\n            this.fetchQuantityFromBasket();\n        },\n\n        value(newValue, oldValue)\n        {\n            if (newValue !== oldValue)\n            {\n                this.setValue(newValue);\n            }\n        },\n\n        interval(newInterval)\n        {\n            this.compInterval = defaultValue(newInterval, 1)\n        }\n    },\n\n    methods:\n    {\n        increaseValue()\n        {\n            const newValue = formatFloat(this.compValue + this.compInterval, this.compDecimals);\n\n            if ((isNullOrUndefined(this.compMax) || newValue <= this.compMax) && !this.waiting)\n            {\n                this.setValue(newValue);\n            }\n        },\n\n        decreaseValue()\n        {\n            const newValue = formatFloat(this.compValue - this.compInterval, this.compDecimals);\n\n            if ((isNullOrUndefined(this.compMin) || newValue >= this.compMin) && !this.waiting)\n            {\n                this.setValue(newValue);\n            }\n        },\n\n        setValue(value)\n        {\n            // consider the configured decimal seperator (if the input is typed in the input field)\n            if (typeof value === \"string\")\n            {\n                value = value.replace(App.decimalSeparator || \",\", \".\");\n            }\n\n            value = parseFloat(value);\n            if (isNaN(value))\n            {\n                value = defaultValue(this.compMin, 1);\n            }\n\n            // limit new value to min/ max value\n            value = limit(value, this.compMin, this.compMax);\n\n            // make sure, new value is an even multiple of interval\n            let diff;\n            if (this.variationBasketQuantity === 0 && this.min !== 0)\n            {\n                diff = formatFloat((value - this.min) % this.compInterval, this.compDecimals, true);\n            }\n            else\n            {\n                diff = formatFloat(value % this.compInterval, this.compDecimals, true);\n            }\n\n            if (diff > 0 && diff !== this.compInterval)\n            {\n                if (diff < this.compInterval / 2)\n                {\n                    value -= diff;\n                }\n                else\n                {\n                    value += this.compInterval - diff;\n                }\n                value = limit(value, this.compMin, this.compMax);\n            }\n\n            // cut fraction\n            value = formatFloat(value, this.compDecimals);\n\n            if (value !== this.compValue)\n            {\n                this.compValue = value;\n                this.onValueChanged();\n            }\n            else if (!isNullOrUndefined(this.$refs.quantityInputField))\n            {\n                this.$refs.quantityInputField.value = this.displayValue;\n            }\n        },\n\n        fetchQuantityFromBasket()\n        {\n            if (!isNullOrUndefined(this.min) && this.variationBasketQuantity >= this.min && this.variationBasketQuantity !== 0)\n            {\n                // set the minimum value to the interval, if the item is already in the basket\n                this.compMin = this.compInterval;\n            }\n            else if (this.variationBasketQuantity === 0)\n            {\n                // reset the minimum, when item is not in the basket\n                this.compMin = this.min;\n            }\n\n            if (!isNullOrUndefined(this.max))\n            {\n                // decrease maximum quantity by quantity of variations already in basket\n                this.compMax = this.max - this.variationBasketQuantity;\n\n                if (this.variationBasketQuantity + this.compInterval > this.max)\n                {\n                    this.compMin = 0;\n                    this.compMax = 0;\n                    this.$emit(\"out-of-stock\", true);\n                }\n                else\n                {\n                    this.$emit(\"out-of-stock\", false);\n                }\n            }\n            else\n            {\n                this.$emit(\"out-of-stock\", false);\n            }\n\n            this.setValue(this.compMin);\n        }\n    }\n}\n</script>\n","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuantityInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuantityInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./QuantityInput.vue?vue&type=template&id=24dfbc62&\"\nimport script from \"./QuantityInput.vue?vue&type=script&lang=js&\"\nexport * from \"./QuantityInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    !_vm.showQuantity && _vm.useLargeScale && _vm.canBeAddedToBasket\n      ? _c(\n          \"div\",\n          {\n            directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n            staticClass: \"add-to-basket-lg-container d-none d-lg-block\",\n            class: { \"no-pointer-events\": _vm.isLoading },\n            attrs: {\n              \"data-toggle\": \"tooltip\",\n              \"data-placement\": \"top\",\n              title: _vm.$translate(\"Ceres::Template.singleItemAddToBasket\"),\n            },\n            on: {\n              click: function ($event) {\n                return _vm.addToBasket()\n              },\n            },\n          },\n          [\n            _c(\"icon\", {\n              staticClass: \"fa-lg mobile-icon-right\",\n              attrs: { icon: \"cart-plus\", loading: _vm.isLoading },\n            }),\n          ],\n          1\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    !_vm.showQuantity && _vm.useLargeScale && !_vm.canBeAddedToBasket\n      ? _c(\n          \"div\",\n          {\n            directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n            staticClass: \"add-to-basket-lg-container d-none d-lg-block\",\n            attrs: {\n              \"data-toggle\": \"tooltip\",\n              \"data-placement\": \"top\",\n              title: _vm.$translate(\"Ceres::Template.itemShowItem\"),\n            },\n            on: {\n              click: function ($event) {\n                return _vm.directToItem()\n              },\n            },\n          },\n          [\n            _c(\"i\", {\n              staticClass: \"fa fa-arrow-right fa-lg d-none d-sm-block\",\n            }),\n          ]\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.showQuantity && !_vm.useLargeScale\n      ? _c(\n          \"div\",\n          {\n            staticClass: \"d-inline\",\n            class: { \"d-lg-none\": !_vm.$ceres.isItemView },\n          },\n          [\n            _c(\"div\", { staticClass: \"add-to-basket-container\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"quantity-input-container\" },\n                [\n                  _c(\"quantity-input\", {\n                    attrs: {\n                      value: _vm.quantity,\n                      timeout: 0,\n                      min: _vm.minimumQuantity,\n                      max: _vm.maximumQuantity,\n                      interval: _vm.intervalQuantity,\n                      \"variation-id\": _vm.variationId,\n                      waiting:\n                        _vm.isLoading ||\n                        !_vm.isSalable ||\n                        !_vm.allVariationsSelected,\n                    },\n                    on: {\n                      \"quantity-change\": _vm.updateQuantity,\n                      \"out-of-stock\": _vm.handleButtonState,\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              !_vm.allVariationsSelected || !_vm.isSalable\n                ? _c(\n                    \"button\",\n                    {\n                      directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n                      staticClass:\n                        \"btn btn-block btn-primary btn-appearance disabled\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: {\n                        \"data-toggle\": \"tooltip\",\n                        \"data-placement\": \"top\",\n                        title: _vm.tooltipText,\n                      },\n                    },\n                    [\n                      _c(\"i\", {\n                        staticClass: \"fa fa-shopping-cart\",\n                        attrs: { \"aria-hidden\": \"true\" },\n                      }),\n                      _vm._v(\n                        \"\\n                \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n            \"\n                      ),\n                    ]\n                  )\n                : !_vm.buttonLockState\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-block btn-primary btn-appearance\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: { disabled: _vm.isLoading || !_vm.hasPrice },\n                      on: {\n                        click: function ($event) {\n                          return _vm.addToBasket()\n                        },\n                      },\n                    },\n                    [\n                      _c(\"icon\", {\n                        attrs: {\n                          icon: \"shopping-cart\",\n                          loading: _vm.isLoading,\n                        },\n                      }),\n                      _vm._v(\n                        \"\\n                \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n            \"\n                      ),\n                    ],\n                    1\n                  )\n                : _c(\n                    \"button\",\n                    {\n                      directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n                      staticClass:\n                        \"btn btn-block btn-primary btn-appearance disabled\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: {\n                        \"data-toggle\": \"tooltip\",\n                        \"data-placement\": \"top\",\n                        title: _vm._f(\"translate\")(\n                          \"Ceres::Template.singleItemQuantityMax\",\n                          { max: _vm.maximumQuantity }\n                        ),\n                      },\n                    },\n                    [\n                      _c(\"icon\", {\n                        attrs: {\n                          icon: \"shopping-cart\",\n                          waiting: _vm.isLoading,\n                        },\n                      }),\n                      _vm._v(\n                        \"\\n                \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n            \"\n                      ),\n                    ],\n                    1\n                  ),\n            ]),\n          ]\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    !_vm.showQuantity && !_vm.useLargeScale\n      ? _c(\n          \"div\",\n          { staticClass: \"d-inline\", class: { \"d-lg-none\": !_vm.isWishList } },\n          [\n            _c(\n              \"div\",\n              {\n                staticClass: \"btn-group\",\n                attrs: { role: \"group\", \"aria-label\": \"Thumb Control\" },\n              },\n              [\n                _vm.canBeAddedToBasket\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-primary btn-appearance mobile-width-button\",\n                        class: { \"no-pointer-events\": _vm.isLoading },\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.addToBasket()\n                          },\n                        },\n                      },\n                      [\n                        _c(\"icon\", {\n                          staticClass: \"fa-lg mobile-icon-right\",\n                          attrs: {\n                            icon: \"shopping-cart\",\n                            loading: _vm.isLoading,\n                          },\n                        }),\n                        _vm._v(\n                          \"\\n                \" +\n                            _vm._s(\n                              _vm.$translate(\n                                \"Ceres::Template.singleItemAddToBasket\"\n                              )\n                            ) +\n                            \"\\n            \"\n                        ),\n                      ],\n                      1\n                    )\n                  : _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-primary btn-appearance mobile-width-button\",\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.directToItem()\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", {\n                          staticClass:\n                            \"fa fa-arrow-right fa-lg d-none d-sm-block\",\n                          attrs: { \"aria-hidden\": \"true\" },\n                        }),\n                        _vm._v(\n                          \"\\n                \" +\n                            _vm._s(\n                              _vm.$translate(\"Ceres::Template.itemShowItem\")\n                            ) +\n                            \"\\n            \"\n                        ),\n                      ]\n                    ),\n              ]\n            ),\n          ]\n        )\n      : _vm._e(),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div :class=\"{'no-pointer-events': isLoading}\" class=\"add-to-basket-lg-container d-none d-lg-block\" v-if=\"!showQuantity && useLargeScale && canBeAddedToBasket\"\n             v-tooltip data-toggle=\"tooltip\" data-placement=\"top\" :title=\"$translate('Ceres::Template.singleItemAddToBasket')\" @click=\"addToBasket()\">\n            <icon icon=\"cart-plus\" class=\"fa-lg mobile-icon-right\" :loading=\"isLoading\"></icon>\n        </div>\n\n        <div class=\"add-to-basket-lg-container d-none d-lg-block\" v-if=\"!showQuantity && useLargeScale && !canBeAddedToBasket\"\n             v-tooltip data-toggle=\"tooltip\" data-placement=\"top\" :title=\"$translate('Ceres::Template.itemShowItem')\" @click=\"directToItem()\">\n            <i class=\"fa fa-arrow-right fa-lg d-none d-sm-block\"></i>\n        </div>\n\n        <div class=\"d-inline\" v-if=\"showQuantity && !useLargeScale\" :class=\"{'d-lg-none': !$ceres.isItemView }\">\n            <div class=\"add-to-basket-container\">\n                <div class=\"quantity-input-container\">\n                    <quantity-input :value=\"quantity\"\n                                    @quantity-change=\"updateQuantity\"\n                                    @out-of-stock=\"handleButtonState\"\n                                    :timeout=\"0\"\n                                    :min=\"minimumQuantity\"\n                                    :max=\"maximumQuantity\"\n                                    :interval=\"intervalQuantity\"\n                                    :variation-id=\"variationId\"\n                                    :waiting=\"isLoading || !isSalable || !allVariationsSelected\">\n                    </quantity-input>\n                </div>\n\n                <button\n                        v-if=\"!allVariationsSelected || !isSalable\"\n                        class=\"btn btn-block btn-primary btn-appearance disabled\"\n                        v-tooltip\n                        data-toggle=\"tooltip\"\n                        data-placement=\"top\"\n                        :title=\"tooltipText\"\n                        :class=\"buttonClasses\"\n                        :style=\"paddingInlineStyles\">\n                    <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\n                </button>\n                <button\n                        v-else-if=\"!buttonLockState\"\n                        :disabled=\"isLoading || !hasPrice\"\n                        class=\"btn btn-block btn-primary btn-appearance\"\n                        @click=\"addToBasket()\"\n                        :class=\"buttonClasses\"\n                        :style=\"paddingInlineStyles\">\n                    <icon icon=\"shopping-cart\" :loading=\"isLoading\"></icon>\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\n                </button>\n                <button v-else\n                        class=\"btn btn-block btn-primary btn-appearance disabled\"\n                        v-tooltip\n                        data-toggle=\"tooltip\"\n                        data-placement=\"top\"\n                        :title=\"'Ceres::Template.singleItemQuantityMax' | translate({ max: maximumQuantity })\"\n                        :class=\"buttonClasses\"\n                        :style=\"paddingInlineStyles\">\n                    <icon icon=\"shopping-cart\" :waiting=\"isLoading\"></icon>\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\n                </button>\n            </div>\n        </div>\n\n        <div class=\"d-inline\" v-if=\"!showQuantity && !useLargeScale\" :class=\"{'d-lg-none': !isWishList }\">\n            <div class=\"btn-group\" role=\"group\" aria-label=\"Thumb Control\">\n                <button type=\"button\" :class=\"{'no-pointer-events': isLoading}\" v-if=\"canBeAddedToBasket\" class=\"btn btn-primary btn-appearance mobile-width-button\" @click=\"addToBasket()\">\n                    <icon icon=\"shopping-cart\" class=\"fa-lg mobile-icon-right\" :loading=\"isLoading\"></icon>\n                    {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\n                </button>\n                <button type=\"button\" v-else class=\"btn btn-primary btn-appearance mobile-width-button\" @click=\"directToItem()\">\n                    <i class=\"fa fa-arrow-right fa-lg d-none d-sm-block\" aria-hidden=\"true\"></i>\n                    {{ $translate(\"Ceres::Template.itemShowItem\") }}\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport ExceptionMap from \"../../exceptions/ExceptionMap\";\nimport { navigateTo } from \"../../services/UrlService\";\nimport { isNullOrUndefined, isDefined } from \"../../helper/utils\";\nimport { mapState } from \"vuex\";\nimport { ButtonSizePropertyMixin } from \"../../mixins/buttonSizeProperty.mixin\";\nimport QuantityInput from \"../item/QuantityInput.vue\";\n\nconst NotificationService = require(\"../../services/NotificationService\");\n\nexport default {\n    name: \"add-to-basket\",\n\n    mixins: [ButtonSizePropertyMixin],\n    \n    components:\n    {\n        QuantityInput\n    },\n\n    props:\n    {\n        itemUrl: String,\n        showQuantity:\n        {\n            type: Boolean,\n            default: false\n        },\n        useLargeScale:\n        {\n            type: Boolean,\n            default: false\n        },\n        variationId:\n        {\n            type: Number\n        },\n        isSalable:\n        {\n            type: Boolean,\n            default: false\n        },\n        hasChildren:\n        {\n            type: Boolean,\n            default: false\n        },\n        intervalQuantity:\n        {\n            type: Number,\n            default: 1\n        },\n        minimumQuantity:\n        {\n            type: Number,\n            default: 0\n        },\n        maximumQuantity:\n        {\n            type: Number,\n            default: null\n        },\n        orderProperties:\n        {\n            type: Array,\n            default: () => []\n        },\n        hasOrderProperties:\n        {\n            type: Boolean,\n            default: false\n        },\n        hasRequiredOrderProperty:\n        {\n            type: Boolean,\n            default: false\n        },\n        hasPrice:\n        {\n            type: Boolean,\n            default: true\n        },\n        paddingClasses:\n        {\n            type: String,\n            default: null\n        },\n        paddingInlineStyles:\n        {\n            type: String,\n            default: null\n        },\n        isWishList:\n        {\n            type: Boolean,\n            default: false\n        },\n        propQuantity:\n        {\n            type: Number,\n            default: null\n        },\n        itemType:\n        {\n            type: String,\n            default: null\n        }\n    },\n\n    inject: {\n        itemId: {\n            default: null\n        }\n    },\n\n    computed:\n    {\n        isSet()\n        {\n            return (\n                this.$store.state.items[this.itemId]\n                && this.$store.state.items[this.itemId].variation\n                && this.$store.state.items[this.itemId].variation.documents[0].data.item.itemType === \"set\"\n            ) || this.itemType === \"set\";\n        },\n\n        canBeAddedToBasket()\n        {\n            return this.isSalable &&\n                !this.hasChildren &&\n                !(this.minimumQuantity != 1 || this.intervalQuantity != 1) &&\n                !this.requiresProperties &&\n                this.hasPrice &&\n                !this.isSet;\n        },\n\n        requiresProperties()\n        {\n            return (App.config.item.requireOrderProperties && \n                (this.hasOrderProperties || this.orderProperties.filter(property => property.property.isShownOnItemPage).length > 0)) ||\n                this.hasRequiredOrderProperty;\n        },\n\n        buttonClasses()\n        {\n            const classes = [];\n\n            if (isDefined(this.buttonSizeClass))\n            {\n                classes.push(this.buttonSizeClass);\n            }\n\n            if (isDefined(this.paddingClasses))\n            {\n                classes.push(this.paddingClasses.split(\" \"));\n            }\n\n            return classes;\n        },\n\n        tooltipText()\n        {\n            if (this.hasAvailableVariations)\n            {\n                return this.$translate(\"Ceres::Template.singleItemPleaseSelectValidVariation\");\n            }\n            else\n            {\n                return this.$translate(\"Ceres::Template.singleItemPleaseSelectNotAvailable\");\n            }\n        },\n\n        variationOrderQuantity()\n        {\n            return this.$store.state.items[this.itemId] && this.$store.state.items[this.itemId].variationOrderQuantity;\n        },\n\n        variationMissingProperties()\n        {\n            return this.$store.getters[`${this.itemId}/variationMissingProperties`];\n        },\n\n        hasAvailableVariations()\n        {\n            return this.$store.state.items[this.itemId]\n                && this.$store.state.items[this.itemId].variationSelect\n                && this.$store.state.items[this.itemId].variationSelect.variations.some(variation => variation.isSalable);\n        },\n\n        allVariationsSelected()\n        {\n            if (this.isSet)\n            {\n                return this.$store.getters[\"itemSetAllVariationSelected\"];\n            }\n            else\n            {\n                // FIX return true if module is not registered. This equals the default value from the module\n                // and is required to use this component in other contexts, e.g. the category view\n                return !this.$store.state.items[this.itemId]\n                    || (this.$store.state.items[this.itemId].variationSelect\n                        && this.$store.state.items[this.itemId].variationSelect.isVariationSelected);\n            }\n        },\n\n        isLoading()\n        {\n            return this.$store.state.items.isAddToBasketLoading === this.variationId || this.$store.state.items.isSetLoading;\n        },\n\n        ...mapState({\n            basketItems: state => state.basket.items,\n            isBasketLoading: state => state.basket.isBasketLoading\n        })\n    },\n\n    data()\n    {\n        return {\n            quantity: 1,\n            buttonLockState: false\n        };\n    },\n\n    methods:\n    {\n        /**\n         * add an item to basket-resource\n         */\n        addToBasket()\n        {\n            this.$store.dispatch(\"loadComponent\", \"add-item-to-basket-overlay\");\n            this.$store.dispatch(\"loadComponent\", \"basket-preview\");\n\n            if (this.variationMissingProperties !== undefined && this.variationMissingProperties.length)\n            {\n                this.showMissingPropertiesError();\n            }\n            else if (this.isSalable || this.isSet)\n            {\n                this.$store.commit(\"setIsAddToBasketLoading\", this.variationId);\n\n                const orderParamsAndSurcharge = extractPropertiesAndSurcharge(this.orderProperties);\n\n                const basketObject =\n                    {\n                        variationId             :   this.variationId,\n                        quantity                :   this.quantity,\n                        basketItemOrderParams   :   orderParamsAndSurcharge.orderParams,\n                        totalOrderParamsMarkup  :   orderParamsAndSurcharge.totalSurcharge\n                    };\n\n                if(this.isSet)\n                {\n                    const setComponents = [];\n                    this.$store.state.items.setComponentIds.forEach(itemId =>\n                    {\n                        const setComponent = this.$store.getters[`${itemId}/currentItemVariation`];\n\n                        const variationId = setComponent && setComponent.variation.id;\n\n                        // Extract order properties and total surcharge for set components\n                        const setComponentOrderParamsAndSurcharge = extractPropertiesAndSurcharge(\n                            setComponent.properties.filter(prop => prop.property.isOderProperty)\n                        );\n\n                        setComponents.push({\n                            variationId: variationId,\n                            quantity: this.$store.state.items[itemId].variationOrderQuantity,\n                            basketItemOrderParams: setComponentOrderParamsAndSurcharge.orderParams,\n                            totalOrderParamsMarkup: setComponentOrderParamsAndSurcharge.totalSurcharge\n                        });\n                    });\n                    basketObject.setComponents = setComponents;\n                }\n\n                this.$store.dispatch(\"addBasketItem\", basketObject).then(\n                    response =>\n                    {\n                        document.dispatchEvent(new CustomEvent(\"afterBasketItemAdded\", { detail: basketObject }));\n                        this.$store.commit(\"setIsAddToBasketLoading\", 0);\n                    },\n                    error =>\n                    {\n                        this.$store.commit(\"setIsAddToBasketLoading\", 0);\n\n                        if (error.data)\n                        {\n                            NotificationService.error(\n                                this.$translate(\n                                    \"Ceres::Template.\" + ExceptionMap.get(error.data.exceptionCode.toString()),\n                                    error.data.placeholder\n                                )\n                            ).closeAfter(5000);\n                        }\n                    });\n            }\n        },\n        showMissingPropertiesError()\n        {\n            this.$store.commit(`${this.itemId}/setVariationMarkInvalidProps`, true);\n\n            const propertyNames = this.variationMissingProperties.map(property => property.property.names.name);\n            let errorMsgContent = \"\";\n\n            for (const name of propertyNames)\n            {\n                errorMsgContent += name + \"<br>\";\n            }\n\n            NotificationService.error(this.$translate(\"Ceres::Template.singleItemMissingOrderPropertiesError\").replace(\"<properties>\", errorMsgContent));\n        },\n\n        directToItem()\n        {\n            navigateTo(this.itemUrl);\n        },\n\n        handleButtonState(value)\n        {\n            this.buttonLockState = value;\n        },\n\n        /**\n         * update the property quantity of the current instance\n         * @param value\n         */\n        updateQuantity(value)\n        {\n            this.quantity = value;\n        }\n    },\n\n    watch:\n    {\n        quantity(value)\n        {\n            if(!isNullOrUndefined(this.itemId))\n            {\n                this.$store.commit(`${this.itemId}/setVariationOrderQuantity`, value);\n                this.$store.commit(`${this.itemId}/setVariationPropertySurcharges`, this.$store.getters[`${this.itemId}/variationBasePrice`]);\n            }\n        },\n\n        variationOrderQuantity(value)\n        {\n            if (this.quantity !== value)\n            {\n                this.quantity = value;\n            }\n        },\n\n        propQuantity(value)\n        {\n            if (!isNaN(value))\n            {\n                this.quantity = value;\n            }\n        }\n    }\n}\n\nfunction extractPropertiesAndSurcharge(orderProperties)\n{\n    let totalSurcharge = 0;\n    const orderParams = [];\n\n    orderProperties.forEach((orderProperty) =>\n    {\n        if(!isNullOrUndefined(orderProperty.property.value))\n        {\n            const property = orderProperty.property;\n\n            if (property.valueType === \"float\" &&\n                !isNullOrUndefined(property.value) &&\n                property.value.slice(-1) === App.decimalSeparator)\n            {\n                property.value = property.value.substr(0, property.value.length - 1);\n            }\n\n            totalSurcharge += (orderProperty.surcharge || 0) + (property.surcharge || 0);\n\n            orderParams.push({\n                propertyId: property.id,\n                type: property.valueType,\n                name: property.names.name,\n                value: property.value\n            });\n        }\n    });\n\n    return {\n        orderParams: orderParams,\n        totalSurcharge: totalSurcharge\n    };\n}\n</script>\n","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddToBasket.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddToBasket.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddToBasket.vue?vue&type=template&id=ca0e912c&\"\nimport script from \"./AddToBasket.vue?vue&type=script&lang=js&\"\nexport * from \"./AddToBasket.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}