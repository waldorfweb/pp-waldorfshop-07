{"version":3,"sources":["webpack:///./resources/js/src/app/mixins/buttonSizeProperty.mixin.js","webpack:///./resources/js/src/app/components/newsletter/NewsletterInput.vue","webpack:///./resources/js/src/app/components/newsletter/NewsletterInput.vue?3d0c","webpack:///resources/js/src/app/components/newsletter/NewsletterInput.vue","webpack:///./resources/js/src/app/components/newsletter/NewsletterInput.vue?f1b2"],"names":["BUTTON_SIZES","LEGACY_CLASS_MAP","ButtonSizePropertyMixin","props","buttonSize","type","String","default","validator","value","Object","keys","indexOf","computed","buttonSizeClass","hasOwnProperty","this","render","_vm","_c","_self","ref","attrs","id","_uid","method","on","submit","$event","preventDefault","validateData","apply","arguments","staticClass","showNameInputs","for","_v","_s","$translate","directives","name","rawName","firstName","expression","domProps","input","target","composing","_e","lastName","email","autocomplete","focus","loadRecaptcha","honeypot","tabindex","showPrivacyPolicyCheckbox","privacyPolicyValue","checked","Array","isArray","_i","change","$$a","$$el","$$c","$$i","concat","slice","innerHTML","privacyPolicyText","class","disabled","isDisabled","click","icon","loading","$ceres","config","global","googleRecaptchaApiKey","_withStripped","mixins","emailFolder","data","methods","ValidationService","done","fail","save","NotificationService","executeReCaptcha","then","ApiService","recaptcha","always","resetInputs","resetRecaptcha","window","component"],"mappings":"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","file":"chunks/ceres-11.min.js","sourcesContent":["const BUTTON_SIZES = [\"btn-sm\", \"btn-lg\"];\n\nconst LEGACY_CLASS_MAP = {\n    \"sm\": \"btn-sm\",\n    \"md\": \"\",\n    \"lg\": \"btn-lg\"\n};\n\nexport const ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    \"\",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      ref: \"newsletterForm\",\n      attrs: { id: \"newsletter-input-form_\" + _vm._uid, method: \"post\" },\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.validateData.apply(null, arguments)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _vm.showNameInputs\n          ? _c(\"div\", { staticClass: \"col-6\" }, [\n              _c(\"div\", { staticClass: \"input-unit\" }, [\n                _c(\n                  \"label\",\n                  { attrs: { for: \"first-name-input_\" + _vm._uid } },\n                  [\n                    _vm._v(\n                      _vm._s(\n                        _vm.$translate(\"Ceres::Template.newsletterFirstName\")\n                      )\n                    ),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.firstName,\n                      expression: \"firstName\",\n                    },\n                  ],\n                  attrs: { type: \"text\", id: \"first-name-input_\" + _vm._uid },\n                  domProps: { value: _vm.firstName },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.firstName = $event.target.value\n                    },\n                  },\n                }),\n              ]),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.showNameInputs\n          ? _c(\"div\", { staticClass: \"col-6 pl-0\" }, [\n              _c(\"div\", { staticClass: \"input-unit\" }, [\n                _c(\"label\", { attrs: { for: \"last-name-input_\" + _vm._uid } }, [\n                  _vm._v(\n                    _vm._s(_vm.$translate(\"Ceres::Template.newsletterLastName\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.lastName,\n                      expression: \"lastName\",\n                    },\n                  ],\n                  attrs: { type: \"text\", id: \"last-name-input_\" + _vm._uid },\n                  domProps: { value: _vm.lastName },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.lastName = $event.target.value\n                    },\n                  },\n                }),\n              ]),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\"div\", { staticClass: \"input-group\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"input-unit\", attrs: { \"data-validate\": \"mail\" } },\n              [\n                _c(\"label\", { attrs: { for: \"email-input-id_\" + _vm._uid } }, [\n                  _vm._v(\n                    _vm._s(_vm.$translate(\"Ceres::Template.newsletterEmail\")) +\n                      \" *\"\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.email,\n                      expression: \"email\",\n                    },\n                  ],\n                  attrs: {\n                    type: \"email\",\n                    autocomplete: \"email\",\n                    id: \"email-input-id_\" + _vm._uid,\n                  },\n                  domProps: { value: _vm.email },\n                  on: {\n                    focus: function ($event) {\n                      _vm.loadRecaptcha = true\n                    },\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.email = $event.target.value\n                    },\n                  },\n                }),\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.honeypot,\n                  expression: \"honeypot\",\n                },\n              ],\n              staticClass: \"honey\",\n              attrs: {\n                autocomplete: \"none\",\n                type: \"text\",\n                name: \"username\",\n                tabindex: \"-1\",\n              },\n              domProps: { value: _vm.honeypot },\n              on: {\n                input: function ($event) {\n                  if ($event.target.composing) return\n                  _vm.honeypot = $event.target.value\n                },\n              },\n            }),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _vm.showPrivacyPolicyCheckbox\n          ? _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"form-check small\",\n                  attrs: { \"data-validate\": \"\" },\n                },\n                [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.privacyPolicyValue,\n                        expression: \"privacyPolicyValue\",\n                      },\n                    ],\n                    staticClass: \"form-check-input\",\n                    attrs: {\n                      type: \"checkbox\",\n                      id: \"privacy-policy-accept-id_\" + _vm._uid,\n                      name: \"privacy-policy-accept\",\n                    },\n                    domProps: {\n                      checked: Array.isArray(_vm.privacyPolicyValue)\n                        ? _vm._i(_vm.privacyPolicyValue, null) > -1\n                        : _vm.privacyPolicyValue,\n                    },\n                    on: {\n                      change: function ($event) {\n                        var $$a = _vm.privacyPolicyValue,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = null,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 &&\n                              (_vm.privacyPolicyValue = $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              (_vm.privacyPolicyValue = $$a\n                                .slice(0, $$i)\n                                .concat($$a.slice($$i + 1)))\n                          }\n                        } else {\n                          _vm.privacyPolicyValue = $$c\n                        }\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", {\n                    staticClass: \"form-check-label\",\n                    attrs: { for: \"privacy-policy-accept-id_\" + _vm._uid },\n                    domProps: { innerHTML: _vm._s(_vm.privacyPolicyText) },\n                  }),\n                ]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 mt-3\" }, [\n          _c(\"div\", { staticClass: \"input-group-btn\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-block btn-primary btn-appearance\",\n                class: _vm.buttonSizeClass,\n                attrs: { type: \"button\", disabled: _vm.isDisabled },\n                on: { click: _vm.validateData },\n              },\n              [\n                _c(\"icon\", {\n                  attrs: { icon: \"paper-plane-o\", loading: _vm.isDisabled },\n                }),\n                _vm._v(\n                  \"\\n                    \" +\n                    _vm._s(\n                      _vm.$translate(\n                        \"Ceres::Template.newsletterSubscribeButtonLabel\"\n                      )\n                    ) +\n                    \"\\n                \"\n                ),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      !!_vm.$ceres.config.global.googleRecaptchaApiKey && _vm.loadRecaptcha\n        ? _c(\"recaptcha\")\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewsletterInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewsletterInput.vue?vue&type=script&lang=js&\"","<template>\n    <form ref=\"newsletterForm\" :id=\"'newsletter-input-form_' + _uid\" method=\"post\" @submit.prevent=\"validateData\">\n        <div class=\"row\">\n            <div class=\"col-6\" v-if=\"showNameInputs\">\n                <div class=\"input-unit\">\n                    <label :for=\"'first-name-input_' + _uid\">{{ $translate(\"Ceres::Template.newsletterFirstName\") }}</label>\n                    <input type=\"text\" :id=\"'first-name-input_' + _uid\" v-model=\"firstName\">\n                </div>\n            </div>\n            <div class=\"col-6 pl-0\" v-if=\"showNameInputs\">\n                <div class=\"input-unit\">\n                    <label :for=\"'last-name-input_' + _uid\">{{ $translate(\"Ceres::Template.newsletterLastName\") }}</label>\n                    <input type=\"text\" :id=\"'last-name-input_' + _uid\" v-model=\"lastName\">\n                </div>\n            </div>\n\n            <div class=\"col-12\">\n                <div class=\"input-group\">\n                    <div class=\"input-unit\" data-validate=\"mail\">\n                        <label :for=\"'email-input-id_' + _uid\">{{ $translate(\"Ceres::Template.newsletterEmail\") }} *</label>\n                        <input @focus=\"loadRecaptcha = true\" type=\"email\" autocomplete=\"email\" :id=\"'email-input-id_' + _uid\" v-model=\"email\">\n                    </div>\n                    <input autocomplete=\"none\" class=\"honey\" type=\"text\" name=\"username\" tabindex=\"-1\" v-model=\"honeypot\">\n                </div>\n            </div>\n\n            <div class=\"col-12\" v-if=\"showPrivacyPolicyCheckbox\">\n                <div class=\"form-check small\" data-validate>\n                    <input type=\"checkbox\" class=\"form-check-input\" :id=\"'privacy-policy-accept-id_' + _uid\" name=\"privacy-policy-accept\" v-model=\"privacyPolicyValue\">\n                    <label :for=\"'privacy-policy-accept-id_' + _uid\" class=\"form-check-label\" v-html=\"privacyPolicyText\">\n                    </label>\n                </div>\n            </div>\n\n            <div class=\"col-12 mt-3\">\n                <div class=\"input-group-btn\">\n                    <button type=\"button\" class=\"btn btn-block btn-primary btn-appearance\" @click=\"validateData\" :disabled=\"isDisabled\" :class=\"buttonSizeClass\">\n                        <icon icon=\"paper-plane-o\" :loading=\"isDisabled\"></icon>\n                        {{ $translate(\"Ceres::Template.newsletterSubscribeButtonLabel\") }}\n                    </button>\n                </div>\n            </div>\n        </div>\n        <recaptcha v-if=\"!!$ceres.config.global.googleRecaptchaApiKey && loadRecaptcha\"></recaptcha>\n    </form>\n</template>\n\n<script>\nimport ApiService from \"../../services/ApiService\";\nimport NotificationService from \"../../services/NotificationService\";\nimport ValidationService from \"../../services/ValidationService\";\nimport { executeReCaptcha } from \"../../helper/executeReCaptcha\";\nimport { ButtonSizePropertyMixin } from \"../../mixins/buttonSizeProperty.mixin\";\n\nexport default {\n    mixins: [ButtonSizePropertyMixin],\n\n    props: {\n        showNameInputs:\n        {\n            type: Boolean,\n            default: false\n        },\n        showPrivacyPolicyCheckbox:\n        {\n            type: Boolean,\n            default: true\n        },\n        emailFolder:\n        {\n            type: Number,\n            default: 0\n        }\n    },\n\n    data()\n    {\n        return {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            isDisabled: false,\n            privacyPolicyValue: false,\n            honeypot: \"\",\n            loadRecaptcha: false\n        };\n    },\n\n    computed:\n    {\n        privacyPolicyText()\n        {\n            const link = \"<a href=\\\"\" + App.urls.privacyPolicy + \"\\\" target=\\\"_blank\\\"><span class=\\\"text-primary text-appearance\\\">\"\n                + this.$translate(\"Ceres::Template.checkoutPrivacyPolicy\", {\"hyphen\": \"&shy;\"})\n                + \"</span></a>\";\n\n            return this.$translate(\"Ceres::Template.newsletterAcceptPrivacyPolicy\", {\"policy\": link});\n        }\n    },\n\n    methods: {\n        validateData()\n        {\n            this.isDisabled = true;\n\n            ValidationService.validate($(\"#newsletter-input-form_\" + this._uid))\n                .done(() =>\n                {\n                    this.save();\n                })\n                .fail(invalidFields =>\n                {\n                    ValidationService.markInvalidFields(invalidFields, \"error\");\n\n                    this.isDisabled = false;\n                });\n        },\n\n        save()\n        {\n            const recaptchaEl = this.$el.querySelector(\"[data-recaptcha]\");\n\n            if (App.config.global.googleRecaptchaApiKey && (!window.grecaptcha || !recaptchaEl))\n            {\n                NotificationService.error(this.$translate(\"Ceres::Template.newsletterAcceptRecaptchaCookie\"));\n                this.isDisabled = false;\n                return;\n            }\n\n            executeReCaptcha(this.$el)\n            .then((recaptchaToken) =>\n            {\n                ApiService.post(\"/rest/io/customer/newsletter\", { email: this.email, firstName: this.firstName, lastName: this.lastName, emailFolder: this.emailFolder, honeypot: this.honeypot, recaptcha: recaptchaToken})\n                    .done(data =>\n                    {\n                        if (!!data.containsHoneypot)\n                        {\n                            NotificationService.warn(\n                                this.$translate(\"Ceres::Template.newsletterHoneypotWarning\")\n                            );\n                        }\n                        else\n                        {\n                            NotificationService.success(\n                                this.$translate(\"Ceres::Template.newsletterSuccessMessage\")\n                            ).closeAfter(3000);\n                        }\n                        this.resetInputs();\n                    })\n                    .fail(() =>\n                    {\n                        NotificationService.error(\n                            this.$translate(\"Ceres::Template.newsletterErrorMessage\")\n                        ).closeAfter(5000);\n                    })\n                    .always(() =>\n                    {\n                        this.isDisabled = false;\n                        this.resetRecaptcha();\n                    });\n            });\n        },\n\n        resetInputs()\n        {\n            this.firstName = \"\";\n            this.lastName = \"\";\n            this.email = \"\";\n            this.privacyPolicyValue = false;\n        },\n\n        resetRecaptcha()\n        {\n            if(App.config.global.googleRecaptchaVersion === 2 && window.grecaptcha)\n            {\n                const recaptchaId = this.$el.querySelector(\"[data-recaptcha]\");\n\n                window.grecaptcha.reset(recaptchaId);\n            }\n        },\n\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./NewsletterInput.vue?vue&type=template&id=0e81974a&\"\nimport script from \"./NewsletterInput.vue?vue&type=script&lang=js&\"\nexport * from \"./NewsletterInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}